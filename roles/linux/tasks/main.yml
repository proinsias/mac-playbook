---
- name: Install system packages
  sudo: true
  when: ansible_os_family == "Debian"
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - build-essential
    - byobu
    - ca-certificates # Set of certificates from Certificate Authorities.
    - ccache # Speed up gcc/g++ functionality.
    - cmake
    - curl
    - file
    - gcc
    - git
    - gnupg2 # OpenPGP implementation.
    - g++
    - htop
    - httpie # Command-line HTTP client.
    - jq # Command-line JSON processor.
    - locales
    - libffi-dev # SNI Support.
    - libmysqlclient-dev
    - libssl-dev # SNI Support.
    - make
    - man
    - moreutils # For sponge.
    - mysql-client-8.0
    - ndg-httpsclient
    - nodejs
    - npm
    - pkg-config
    - pv # Progress viewer.
    - pyasn1
    - pyopenssl
    - python3
    - python3-dev
    - python3-pip
    - python3-setuptools
    - sed
    - software-properties-common
    - unzip
    - vim
    - xz-utils
    - wget

- name: Upgrade system packages
  become: true
  ansible.builtin.apt:
    autoremove: true
    upgrade: dist
    update_cache: true
  when: ansible_os_family == "Debian"
  tags: [become]
# FIXME: Run /usr/sbin/update-ccache-symlinks
# FIXME: LANG="en_US.UTF-8" \
#    LANGUAGE="en_US:en" \
#    PATH="/usr/lib/ccache${PATH:+:${PATH}}"
# FIXME: locale-gen "${LANG}" && \
#    update-locale LANG="${LANG}"
# FIXME: LC_ALL="en_US.UTF-8"

# FIXME:     if [ "${TARGETARCH:-$(arch)}" = "arm64" ] ; then \
#        curl --fail --location --show-error --silent \
#            "https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.aarch64.tar.xz" \
#        | tar --directory /tmp --extract --verbose --xz ; \
#     else \
#          curl --fail --location --show-error --silent \
#              "https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.x86_64.tar.xz" \
#          | tar --directory /tmp --extract --verbose --xz ; \
#    fi && \
#    mv --verbose /tmp/shellcheck-stable/shellcheck /usr/local/bin/shellcheck && \
#    if [ "${TARGETARCH:-$(arch)}" = "${BUILDARCH:-$(arch)}" ] ; then \
#        shellcheck --version ; \
#    fi

# FIXME:     if [ "${TARGETARCH:-$(arch)}" = "arm64" ] ; then \
#        curl --fail --location --show-error --silent \
#            "https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-arm64" \
#            --output /usr/local/bin/hadolint ; \
#    else \
#        curl --fail --location --show-error --silent \
#            "https://github.com/hadolint/hadolint/releases/download/v2.10.0/hadolint-Linux-x86_64" \
#            --output /usr/local/bin/hadolint ; \
#    fi && \
#    chmod +x /usr/local/bin/hadolint ; \
#    if [ "${TARGETARCH:-$(arch)}" = "${BUILDARCH:-$(arch)}" ] ; then \
#        hadolint --version ; \
#    fi

# FIXME: Need? npm install --global yarn

# FIXME: Need? ln --symbolic /usr/bin/pip3 /usr/bin/pip && \

# FIXME: Need python3.8 -m pip install --no-cache-dir --upgrade \
#        pip && \
#    python3.8 -m pip install --no-cache-dir \
#        ipython \
#        safety \
#        setuptools==45.1.0 \
#        wheel==0.33.6
