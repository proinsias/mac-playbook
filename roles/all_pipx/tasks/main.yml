---
- name: Check python3 and pipx are installed and upgraded
  community.general.homebrew:
    name: [python3, pipx]
    state: latest
  tags: [always]

- name: Install global pipx packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    name: "{{ item }}"
    python: "{{ prefix }}/bin/python3"
  # ansible.builtin.command: pipx install {{ item }} --python {{ prefix }}/bin/python3
  with_items: "{{ pipx_packages }}"
  tags: [always]

- name: Install global pipx bandit packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: bandit
    state: inject
  # ansible.builtin.command: pipx inject bandit {{ item }}
  with_items: "{{ pipx_bandit_packages }}"
  tags: [always]

- name: Install global pipx flake8 packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: flake8
    state: inject
  # ansible.builtin.command: pipx inject flake8 {{ item }}
  with_items: "{{ pipx_flake8_packages }}"
  tags: [always]

- name: Install global pipx mdformat packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: mdformat
    state: inject
  # ansible.builtin.command: pipx inject mdformat {{ item }}
  with_items: "{{ pipx_mdformat_packages }}"
  tags: [always]

- name: Install global pipx nbdime packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: nbdime
    state: inject
  # ansible.builtin.command: pipx inject ntfy {{ item }}
  with_items: "{{ pipx_nbdime_packages }}"
  tags: [always]

- name: Install global pipx ntfy packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: ntfy
    state: inject
  # ansible.builtin.command: pipx inject ntfy {{ item }}
  with_items: "{{ pipx_ntfy_packages }}"
  tags: [always]

- name: Install global pipx pydocstyle packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: pydocstyle
    state: inject
  # ansible.builtin.command: pipx inject pydocstyle {{ item }}
  with_items: "{{ pipx_pydocstyle_packages }}"
  tags: [always]

- name: Install global pipx pytest packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    inject_packages: "{{ item }}"
    name: pytest
    state: inject
  # ansible.builtin.command: pipx inject pytest {{ item }}
  with_items: "{{ pipx_pytest_packages }}"
  tags: [always]

- name: Update pipx packages
  community.general.pipx:
    executable: "{{ prefix }}/bin/pipx"
    state: upgrade_all
    python: "{{ prefix }}/bin/python3"
  tags: [always]
