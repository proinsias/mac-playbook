---

    - name: Dock - Ensure dockutil is installed.
      community.general.homebrew:
          name: dockutil
          state: latest

    - name: Dock - Test existence of configured dock apps.
      stat:
          path: '{{ item.path }}'
      with_items: '{{ dock.apps }}'
      register: dock_apps_stat
      when: not dock.apps_force_install
      changed_when: false
      failed_when: false

    - name: Dock - Set dock items to install to all configured items.
      set_fact:
          dock_apps_to_install: '{{ dock.apps }}'
      when: dock.apps_force_install

    - name: Dock - Set dock items to install only to existing items.
      set_fact:
          dock_apps_to_install: "{{ dock_apps_stat.results | selectattr('stat.exists', 'equalto', True) | map(attribute='item') | list }}"
      when: not dock.apps_force_install

    - name: Dock - Get apps currently in dock.
      shell: "dockutil --list | grep 'persistent-apps' | cut -d$'\t' -f1"
      register: dock_current_apps
      changed_when: false
      check_mode: no

    - name: Dock - Get undefined items in dock.
      set_fact:
          dock_undefined_items: "{{ dock_current_apps.stdout_lines | difference(dock_apps_to_install | map(attribute='name') | list) }}"

    - name: Dock - Remove dock spacer tiles.
      shell: dockutil --remove spacer-tiles --no-restart
      notify: Restart Dock
      changed_when: false

    - name: Dock - Remove undefined dock items.
      shell: dockutil --remove '{{ item }}' --no-restart
      with_items: '{{ dock_undefined_items }}'
      when: dock.apps_remove_undefined
      notify: Restart Dock

    - name: Dock - Add configured dock items.
      shell: dockutil --add '{{ item.1.path }}' --label '{{ item.1.name }}' --no-restart {{ item.1.args | default('') }}
      with_indexed_items: '{{ dock_apps_to_install }}'
      when: dock_current_apps.stdout.find(item.1.name) == -1
      notify: Restart Dock

    - name: Dock - Get current dock items.
      shell: "dockutil --list | grep 'persistent-apps' | cut -d$'\t' -f1"
      register: dock_current_apps
      changed_when: false
      check_mode: no

    - name: Dock - Ensure dock item order.
      shell: dockutil --move '{{ item.1.name }}' --position {{ item.0 | int + 1 }} --no-restart
      with_indexed_items: '{{ dock_apps_to_install }}'
      when: dock_current_apps.stdout_lines[item.0].find(item.1.name) == -1
      notify: Restart Dock

    - name: Dock - Add configured spacer tiles to dock.
      shell: dockutil --add '' --type spacer --section apps --after {{ item.1.after }} --no-restart
      with_indexed_items: '{{ dock.spacers }}'
      notify: Restart Dock
      changed_when: false
