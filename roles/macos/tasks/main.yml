---

    - name: Run macos homebrew role
      include_role:
          name: macos-homebrew
      tags: [always] # Always run, even when tags specified.

    - name: Run macos dockutil role
      include_role:
          name: macos-dockutil
      tags: [never] # Disable until dockutil support for M1 updated - kcrawford/dockutil#127.  # FIXME:

    - name: Run macos mas role
      include_role:
          name: macos-mas
      tags: [always] # Always run, even when tags specified.

    - name: Run macos osx defaults role
      include_role:
          name: macos-osx-defaults
      tags: [always] # Always run, even when tags specified.

    - name: Run macos power role
      include_role:
          name: macos-power
      tags: [always] # Always run, even when tags specified.

    - name: Run macos settings role
      include_role:
          name: macos-settings
      tags: [never] # Disable until dockutil support for M1 updated - kcrawford/dockutil#127.  # FIXME:

    - name: Run personal mas role
      include_role:
          name: personal-mas
      tags: [never, personal]  # This won't run unless you specify the 'personal' tag.

    - name: Run work mas role
      include_role:
          name: work-mas
      tags: [never, work]  # This won't run unless you specify the 'work' tag.

    # On a fresh osx install the type of idletime is string, if activated it gets changed to int

    - name: Screensaver - Read idleTime type.
      command: defaults -currentHost read-type com.apple.screensaver idleTime
      register: idletime_type
      changed_when: false
      failed_when: false

    - name: Screensaver - Change idleTime type to int.
      command: defaults -currentHost write com.apple.screensaver idleTime -int 60
      when: idletime_type.stdout.find('string') != -1
      no_log: true

    - name: Screensaver - Set screensaver to Aerial
      shell: defaults -currentHost write com.apple.screensaver moduleDict -dict moduleName -string Aerial displayName -string Aerial path -string ~/Library/Screen\
          Savers/Aerial.saver type -int 0

    - name: Security - Get gatekeeper status
      command: spctl --status
      register: gatekeeper_status
      changed_when: false
      failed_when: false

    - name: Security - Enable Gatekeeper
      command: spctl --master-enable
      become: true
      when: gatekeeper_status.stdout.find('disabled') != -1
      tags: [become]

    - name: Sound â€“ Mute Audio Output
      command: osascript -e 'set volume output muted true'
